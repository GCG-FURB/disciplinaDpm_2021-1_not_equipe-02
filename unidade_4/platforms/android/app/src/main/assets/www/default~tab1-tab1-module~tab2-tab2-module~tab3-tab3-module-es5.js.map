{"version":3,"sources":["webpack:///src/app/explore-container/explore-container.component.ts","webpack:///src/app/explore-container/explore-container.component.scss","webpack:///src/app/explore-container/explore-container.component.html","webpack:///src/app/storage.service.ts","webpack:///src/app/explore-container/explore-container.module.ts"],"names":["ExploreContainerComponent","selector","template","DOENCA_KEY","CONTATO_KEY","MEDICAM_KEY","ALERGIA_KEY","StorageService","storage","toastController","novaDoenca","get","then","listaDoencas","push","set","doencas","length","idUpdate","id","novaLista","map","d","console","log","toKeep","filter","exibir_mensagem","contato","contatos","novoContato","c","novaAlergia","alergias","alergia","novoMedicamento","listaMedicamentos","medicamentos","mensagem","create","message","duration","toast","present","providedIn","ExploreContainerComponentModule","imports","declarations","exports"],"mappings":"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","file":"default~tab1-tab1-module~tab2-tab2-module~tab3-tab3-module-es5.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-explore-container',\n  templateUrl: './explore-container.component.html',\n  styleUrls: ['./explore-container.component.scss'],\n})\nexport class ExploreContainerComponent implements OnInit {\n  @Input() name: string;\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","export default \"#container {\\n  text-align: center;\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  top: 50%;\\n  transform: translateY(-50%);\\n}\\n\\n#container strong {\\n  font-size: 20px;\\n  line-height: 26px;\\n}\\n\\n#container p {\\n  font-size: 16px;\\n  line-height: 22px;\\n  color: #8c8c8c;\\n  margin: 0;\\n}\\n\\n#container a {\\n  text-decoration: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2V4cGxvcmUtY29udGFpbmVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQUE7RUFFQSxrQkFBQTtFQUNBLE9BQUE7RUFDQSxRQUFBO0VBQ0EsUUFBQTtFQUNBLDJCQUFBO0FBQUY7O0FBR0E7RUFDRSxlQUFBO0VBQ0EsaUJBQUE7QUFBRjs7QUFHQTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtFQUVBLGNBQUE7RUFFQSxTQUFBO0FBRkY7O0FBS0E7RUFDRSxxQkFBQTtBQUZGIiwiZmlsZSI6ImV4cGxvcmUtY29udGFpbmVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2NvbnRhaW5lciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xufVxuXG4jY29udGFpbmVyIHN0cm9uZyB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgbGluZS1oZWlnaHQ6IDI2cHg7XG59XG5cbiNjb250YWluZXIgcCB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG5cbiAgY29sb3I6ICM4YzhjOGM7XG5cbiAgbWFyZ2luOiAwO1xufVxuXG4jY29udGFpbmVyIGEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59Il19 */\";","export default \"<div id=\\\"container\\\">\\n  <strong>{{ name }}</strong>\\n  <p>Explore <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"https://ionicframework.com/docs/components\\\">UI Components</a></p>\\n</div>\";","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { ToastController } from '@ionic/angular';\n\nexport interface Doenca{\n  id: number;\n  modified: number;\n  nome: string;\n  desc: string;\n}\n\nexport interface Contato {\n  id: number;\n  modified: number;\n  nome: string;\n  email: string;\n  telefone: string;\n}\n\nexport interface Medicamento {\n  id: number;\n  modified: number;\n  nome: string;\n  desc: string;\n}\n\nexport interface Alergia {\n  id: number;\n  modified: number;\n  nome: string;\n}\n\n//\n\nconst DOENCA_KEY = 'doencas';\nconst CONTATO_KEY = 'contatos';\nconst MEDICAM_KEY = 'medicamentos';\nconst ALERGIA_KEY = 'alergias';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  constructor(private storage: Storage, public toastController: ToastController) { }\n  \n  //Aqui é onde adiciona a doença\n  cadastrarDoenca(novaDoenca: Doenca): Promise <any>{\n    return this.storage.get(DOENCA_KEY).then((listaDoencas: Doenca[]) =>{\n      if(listaDoencas){\n        listaDoencas.push(novaDoenca);\n        return this.storage.set(DOENCA_KEY, listaDoencas);\n      }else{\n        return this.storage.set(DOENCA_KEY, [novaDoenca]);\n      }\n    });\n  }\n\n  //Aqui lista as doenças\n  async getDoencas(): Promise<Doenca[]>{\n    let doencas = await this.storage.get(DOENCA_KEY);\n    return doencas;\n  }\n\n  //Aqui atualiza uma doença cadastrada\n  updateDoencas(novaDoenca: Doenca): Promise<any>{\n    return this.storage.get(DOENCA_KEY).then((listaDoencas: Doenca[]) =>{\n      if(!listaDoencas || listaDoencas.length == 0){\n        //Atualizando uma doença sem ter nenhuma cadastrada\n        return null;\n      }\n\n      const idUpdate = novaDoenca.id;\n      const novaLista = listaDoencas.map( d => d.id === idUpdate ? novaDoenca : d);\n      return this.storage.set(DOENCA_KEY, novaLista);\n    });\n  }\n\n\n  //Aqui apaga a doenca\n  async deleteDoencas(id: number): Promise<void>{\n    const doencas = await this.storage.get(DOENCA_KEY);\n    if(!doencas || doencas.length == 0){\n      console.log('errou')\n      console.log(doencas)\n      return;\n    }\n\n    const toKeep: Doenca[] = doencas.filter( d => d.id !== id);\n    this.exibir_mensagem('Excluido com sucesso.');\n    this.storage.set(DOENCA_KEY, toKeep);\n    return;\n  }\n\n  //----------------------------------------------------------------------------\n\n  cadastrarContato(contato: Contato): Promise <any>{\n    return this.storage.get(CONTATO_KEY).then((contatos: Contato[]) =>{\n      if(contatos){\n        contatos.push(contato);\n        return this.storage.set(CONTATO_KEY, contatos);\n      }else{\n        return this.storage.set(CONTATO_KEY, [contato]);\n      }\n    });\n  }\n\n  //Aqui lista os contatos\n  getContatos(): Promise<Contato[]>{\n    return this.storage.get(CONTATO_KEY);\n  }\n\n  updateContatos(novoContato: Contato): Promise<any>{\n    return this.storage.get(CONTATO_KEY).then((contatos: Contato[]) =>{\n      if(!contatos || contatos.length == 0){\n        //Atualizando uma doença sem ter nenhuma cadastrada\n        return null;\n      }\n\n      const idUpdate = novoContato.id;\n      const novaLista = contatos.map( c => c.id === idUpdate ? novoContato : c);\n      return this.storage.set(CONTATO_KEY, novaLista);\n    });\n  }\n\n  updateAlergias(novaAlergia: Alergia): Promise<any>{\n    return this.storage.get(ALERGIA_KEY).then((alergias: Alergia[]) =>{\n      if(!alergias || alergias.length == 0){\n        return null;\n      }\n      const idUpdate = novaAlergia.id;\n      const novaLista = alergias.map( c => c.id === idUpdate ? novaAlergia : c);\n      return this.storage.set(ALERGIA_KEY, novaLista);\n    });\n  }\n\n  //Aqui apaga o contato\n  deleteContato(id: number): Promise<Contato>{\n    return this.storage.get(CONTATO_KEY).then((contatos: Contato[]) =>{\n      if(!contatos || contatos.length == 0){\n        return null;\n      }\n\n      const toKeep: Contato[] = contatos.filter( c => c.id !== id);\n      this.exibir_mensagem('Excluido com sucesso.');\n      return this.storage.set(CONTATO_KEY, toKeep);\n\n    });\n  }\n\n  cadastrarAlergia(alergia: Alergia): Promise <any>{\n    return this.storage.get(ALERGIA_KEY).then((alergias: Alergia[]) =>{\n      if(alergias){\n        alergias.push(alergia);\n        return this.storage.set(ALERGIA_KEY, alergias);\n      }else{\n        return this.storage.set(ALERGIA_KEY, [alergia]);\n      }\n    });\n  }\n\n  getAlergias(): Promise<Alergia[]>{\n    return this.storage.get(ALERGIA_KEY);\n  }\n\n  //Aqui apaga a alergia\n  deleteAlergia(id: number): Promise<Alergia>{\n    return this.storage.get(ALERGIA_KEY).then((alergias: Alergia[]) =>{\n      if(!alergias || alergias.length == 0){\n        return null;\n      }\n\n      const toKeep: Alergia[] = alergias.filter( c => c.id !== id);\n      this.exibir_mensagem('Excluido com sucesso.');\n      return this.storage.set(ALERGIA_KEY, toKeep);\n\n    });\n  }\n  \n  //----------------------------------------------------------------------------\n\n  cadastrarMedicamento(novoMedicamento: Medicamento): Promise <any>{\n    return this.storage.get(MEDICAM_KEY).then((listaMedicamentos: Medicamento[]) =>{\n      if(listaMedicamentos){\n        listaMedicamentos.push(novoMedicamento);\n        return this.storage.set(MEDICAM_KEY, listaMedicamentos);\n      }else{\n        return this.storage.set(MEDICAM_KEY, [novoMedicamento]);\n      }\n    });\n  }\n\n  async getMedicamentos(): Promise<Medicamento[]>{\n    let medicamentos = await this.storage.get(MEDICAM_KEY);\n    return medicamentos;\n  }\n\n  updateMedicamentos(novoMedicamento: Medicamento): Promise<any>{\n    return this.storage.get(MEDICAM_KEY).then((listaMedicamentos: Medicamento[]) =>{\n      if(!listaMedicamentos || listaMedicamentos.length == 0){\n        return null;\n      }\n\n      const idUpdate = novoMedicamento.id;\n      const novaLista = listaMedicamentos.map( d => d.id === idUpdate ?\n                                             novoMedicamento : d);\n      return this.storage.set(MEDICAM_KEY, novaLista);\n    });\n  }\n\n\n  async deleteMedicamentos(id: number): Promise<void>{\n    const medicamentos = await this.storage.get(MEDICAM_KEY);\n    if(!medicamentos || medicamentos.length == 0){\n      console.log('errou')\n      console.log(medicamentos)\n      return;\n    }\n\n    const toKeep: Medicamento[] = medicamentos.filter( d => d.id !== id);\n    this.exibir_mensagem('Excluido com sucesso.');\n    this.storage.set(MEDICAM_KEY, toKeep);\n    return;\n  }\n  \n  //----------------------------------------------------------------------------\n\n  async exibir_mensagem(mensagem) {\n    const toast = await this.toastController.create({\n      message: mensagem,\n      duration: 2000\n    });\n    toast.present();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ExploreContainerComponent } from './explore-container.component';\n\n@NgModule({\n  imports: [ CommonModule, FormsModule, IonicModule],\n  declarations: [ExploreContainerComponent],\n  exports: [ExploreContainerComponent]\n})\nexport class ExploreContainerComponentModule {}\n"]}